


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '40')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('mul_exp', [Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])]), Tree('int_exp', [Token('INT', '3')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '4')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '40')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('mul_exp', [Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])]), Tree('int_exp', [Token('INT', '3')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '4')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '40')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '40')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('mul_exp', [Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])]), Tree('int_exp', [Token('INT', '3')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '4')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('mul_exp', [Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])]), Tree('int_exp', [Token('INT', '3')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '4')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('sub_exp', [Tree('sub_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('sub_exp', [Tree('sub_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('mul_exp', [Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])]), Tree('int_exp', [Token('INT', '3')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'y'), Tree('exp_1', [Tree('mul_exp', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])])])]), Tree('int_exp', [Token('INT', '3')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'x')])])])])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'y')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('mul_exp', [Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])]), Tree('int_exp', [Token('INT', '3')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'y'), Tree('exp_1', [Tree('mul_exp', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])])])]), Tree('int_exp', [Token('INT', '3')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'x')])])])])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'y')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '40')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '40')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'y'), Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '10')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '5')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'y')])])]), Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'x')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'x')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '27')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'y'), Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '10')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '5')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'y')])])]), Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'x')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'x')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '27')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('mul_exp', [Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])]), Tree('int_exp', [Token('INT', '3')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '4')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('mul_exp', [Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])]), Tree('int_exp', [Token('INT', '3')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '4')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('sub_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('sub_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('sub_exp', [Tree('sub_exp', [Tree('passthrough_1', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('sub_exp', [Tree('sub_exp', [Tree('passthrough_1', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('add_exp', [Tree('add_exp', [Tree('passthrough_1', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('add_exp', [Tree('add_exp', [Tree('passthrough_1', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree(Token('RULE', 'exp'), [Tree('add_exp', [Tree('passthrough_1', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('mul_exp', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '2')])]), Tree('int_exp', [Token('INT', '3')])])])])])]), Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'y'), Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('mul_exp', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('add_exp', [Tree('passthrough_1', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '2')])])])])])]), Tree('int_exp', [Token('INT', '3')])])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('var_exp', [Token('CNAME', 'x')])])])])])])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('var_exp', [Token('CNAME', 'y')])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree(Token('RULE', 'exp'), [Tree('add_exp', [Tree('passthrough_1', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('mul_exp', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '2')])]), Tree('int_exp', [Token('INT', '3')])])])])])]), Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'y'), Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('mul_exp', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('add_exp', [Tree('passthrough_1', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '2')])])])])])]), Tree('int_exp', [Token('INT', '3')])])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('var_exp', [Token('CNAME', 'x')])])])])])])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('var_exp', [Token('CNAME', 'y')])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('add_exp', [Tree('passthrough_1', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '40')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '2')])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('add_exp', [Tree('passthrough_1', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '40')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '2')])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('usub_exp', [Tree('usub_exp', [Tree('int_exp', [Token('INT', '42')])])])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('usub_exp', [Tree('usub_exp', [Tree('int_exp', [Token('INT', '42')])])])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'y'), Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '10')])])])])])]), Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '5')])])])])])]), Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree(Token('RULE', 'exp'), [Tree('add_exp', [Tree('passthrough_1', [Tree('passthrough_2', [Tree('var_exp', [Token('CNAME', 'y')])])]), Tree('passthrough_2', [Tree('var_exp', [Token('CNAME', 'x')])])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('add_exp', [Tree('passthrough_1', [Tree('passthrough_2', [Tree('var_exp', [Token('CNAME', 'x')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '27')])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'y'), Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '10')])])])])])]), Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '5')])])])])])]), Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree(Token('RULE', 'exp'), [Tree('add_exp', [Tree('passthrough_1', [Tree('passthrough_2', [Tree('var_exp', [Token('CNAME', 'y')])])]), Tree('passthrough_2', [Tree('var_exp', [Token('CNAME', 'x')])])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('add_exp', [Tree('passthrough_1', [Tree('passthrough_2', [Tree('var_exp', [Token('CNAME', 'x')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '27')])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('add_exp', [Tree('passthrough_1', [Tree('passthrough_2', [Tree('usub_exp', [Tree('int_exp', [Token('INT', '1')])])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '2')])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('add_exp', [Tree('passthrough_1', [Tree('passthrough_2', [Tree('usub_exp', [Tree('int_exp', [Token('INT', '1')])])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '2')])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('add_exp', [Tree('passthrough_1', [Tree('mul_exp', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '2')])]), Tree('int_exp', [Token('INT', '3')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '4')])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('add_exp', [Tree('passthrough_1', [Tree('mul_exp', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '2')])]), Tree('int_exp', [Token('INT', '3')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '4')])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('add_exp', [Tree('sub_exp', [Tree('passthrough_1', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree(Token('RULE', 'exp'), [Tree('passthrough_1', [Tree('passthrough_2', [Tree('paren_exp', [Tree(Token('RULE', 'exp'), [Tree('add_exp', [Tree('sub_exp', [Tree('passthrough_1', [Tree('passthrough_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('passthrough_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '552921504606846976552921504606846976')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'x')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('sub_exp', [Tree('sub_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('mul_exp', [Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])]), Tree('int_exp', [Token('INT', '3')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'y'), Tree('exp_1', [Tree('mul_exp', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])])])]), Tree('int_exp', [Token('INT', '3')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'x')])])])])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'y')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '40')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('exp_1', [Tree('exp_2', [Tree('unary_exp', [Tree('unary_op', [Tree('exp_1', [Tree('exp_2', [Tree('unary_exp', [Tree('unary_op', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '42')])])])])])])])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'y'), Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '10')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '5')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'y')])])]), Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'x')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'x')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '27')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('mul_exp', [Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])]), Tree('int_exp', [Token('INT', '3')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '4')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree('sub_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '42')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '10')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'x')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('sub_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '552921504606846976552921504606846976')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'x')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('sub_exp', [Tree('sub_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('mul_exp', [Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])]), Tree('int_exp', [Token('INT', '3')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'y'), Tree('exp_1', [Tree('mul_exp', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])])])]), Tree('int_exp', [Token('INT', '3')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'x')])])])])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'y')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '40')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('exp_1', [Tree('exp_2', [Tree('unary_exp', [Tree('unary_op', [Tree('exp_1', [Tree('exp_2', [Tree('unary_exp', [Tree('unary_op', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '42')])])])])])])])])])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'y'), Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '10')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '5')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'y')])])]), Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'x')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'x')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '27')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('exp_1', [Tree('mul_exp', [Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])]), Tree('int_exp', [Token('INT', '3')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '4')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree('sub_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '42')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '10')])])])])]), Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('exp_1', [Tree('exp_2', [Tree('var_exp', [Token('CNAME', 'x')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('print_stmt', [Tree('exp_1', [Tree('exp_2', [Tree('paren_exp', [Tree('add_exp', [Tree('sub_exp', [Tree('exp_1', [Tree('exp_2', [Tree('int_exp', [Token('INT', '1')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '2')])])]), Tree('exp_2', [Tree('int_exp', [Token('INT', '3')])])])])])])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree(Token('RULE', 'exp'), [Token('INT', '1')])])])])])


Parse String:Tree(Token('RULE', 'lvar'), [Tree(Token('RULE', 'stmt_list'), [Tree(Token('RULE', 'stmt'), [Tree('assign_stmt', [Token('CNAME', 'x'), Tree('add_exp', [Tree(Token('RULE', 'exp'), [Tree(Token('RULE', 'exp_1'), [Tree('int_exp', [Token('INT', '1')])])]), Tree(Token('RULE', 'exp_1'), [Tree('unary_exp', [Tree('unary_op', [Tree('int_exp', [Token('INT', '1')])])])])])])])])])